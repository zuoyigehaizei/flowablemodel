<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.flowableactivity.mapper.WorkflowMapper">
	<insert id="add" parameterType="com.example.flowableactivity.model.entity.WorkflowInfo" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO workflow (id,flowname,flowdesc,flowstatus,createtime,updatetime,organizationalid,activitykey)
		VALUES (#{id},#{flowname},#{flowdesc},#{flowstatus},#{createtime},#{updatetime},#{organizationalid},#{activitykey})
	</insert>

	<update id="edit" parameterType="com.example.flowableactivity.model.entity.WorkflowInfo">
		update workflow
		<set>
			<if test="flowname != null">flowname = #{flowname},</if>
			<if test="flowdesc != null">flowdesc = #{flowdesc},</if>
			<if test="flowstatus != null">flowstatus = #{flowstatus},</if>
			<if test="createtime != null">createtime = #{createtime},</if>
			<if test="updatetime != null">updatetime = #{updatetime},</if>
			<if test="activitykey != null">activitykey = #{activitykey},</if>
			<if test="organizationalid != null">organizationalid = #{organizationalid},</if>
		</set>
		<where>
			id=#{id}
		</where>
	</update>

	<delete id="del" parameterType="java.lang.Integer">
		DELETE FROM workflow WHERE id = #{id}
	</delete>
	<select id="getByID" parameterType="java.lang.Integer" resultType="com.example.flowableactivity.model.entity.WorkflowInfo">
		SELECT * FROM workflow WHERE id=#{id}
	</select>

	<!--查询工作流版本信息-->
	<select id="getWorkflowDto" parameterType="java.lang.Integer" resultType="com.example.flowableactivity.model.WorkflowDTO">
		SELECT
		  w.flowname,
		  w.flowdesc,
		  w.flowstatus as status,
		  w.id,
		  w.organizationalid,
		  w.createtime,
		  w.activitykey,
		  a.VERSION_ as version
		FROM
			workflow as w
		LEFT JOIN act_re_procdef as a
		on w.activitykey=a.KEY_
		where w.id = #{id}
		ORDER BY a.VERSION_ desc
		LIMIT 1
	</select>

	<!--查询工作流历史版本-->
	<select id="getActivityHistory" parameterType="java.util.Map" resultType="com.example.flowableactivity.model.WorkflowDTO">
		SELECT
			w.flowname,
			w.flowdesc,
			w.flowstatus as status,
			w.id,
			w.organizationalid,
			w.createtime,
			w.activitykey,
			arp.VERSION_ as version
		FROM
			workflow w
		LEFT JOIN act_re_procdef arp ON w.activitykey = arp.KEY_
		WHERE
			w.activitykey = #{activityKey}
		ORDER BY
		arp.VERSION_ desc
		<if test="pagesize != null">
			LIMIT #{page}, #{pagesize}
		</if>
	</select>

	<select id="getsCount" parameterType="java.util.Map" resultType="Integer">
		select count(id) from workflow
		<where>
			<include refid="query_where"></include>
		</where>
	</select>

	<select id="gets" parameterType="java.util.Map" resultType="com.example.flowableactivity.model.entity.WorkflowInfo">
		SELECT * FROM workflow
	    <where>  
	        <include refid="query_where"></include>
	    </where>
	    <if test="orderbys != null"> 
	    	ORDER BY 
		    <foreach collection="orderbys.keys" item="k" index="index" separator="," > 
		        ${k} ${orderbys[k]}
		    </foreach>  
	    </if>
	    <if test="pagesize != null">
	    	LIMIT #{page}, #{pagesize}
	    </if>
	</select>

	<sql id="query_where">
		<if test="organizationalid != null">
			organizationalid=#{organizationalid}
		</if>
		<if test="site != null">
			AND site=#{site}
		</if>
		<if test="keyword != null">
			AND name LIKE CONCAT('%',#{keyword},'%')
		</if>
	</sql>
</mapper>